TASK 1:NUMBER GAME

1. Generate a random number within a specified range, such as 1 to 100.

2. Prompt the user to enter their guess for the generated number.

3. Compare the user's guess with the generated number and provide feedback on whether the guess
is correct, too high, or too low.

4. Repeat steps 2 and 3 until the user guesses the correct number.

You can incorporate additional details as follows:

5. Limit the number of attempts the user has to guess the number.
6. Add the option for multiple rounds, allowing the user to play again.
7. Display the user's score, which can be based on the number of attempts taken or rounds win.

PROGRAM:
import java.util.*;

public class Markt {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Random random = new Random();

        int minRange = 1;
        int maxRange = 100;
        int maxAttempts = 5;
        int score = 0;
        boolean playAgain = true;

        System.out.println("Welcome to the Number Guessing Game!");

        while (playAgain) {
            int randomNumber = random.nextInt(maxRange - minRange + 1) + minRange;
            System.out.println("\nI've picked a number between " + minRange + " and " + maxRange + ".");
            System.out.println("You have " + maxAttempts + " attempts to guess it.");

            int attempts = 0;
            boolean guessedCorrectly = false;

            while (attempts < maxAttempts && !guessedCorrectly) {
                System.out.print("\nEnter your guess: ");
                int guess = scanner.nextInt();
                scanner.nextLine(); 

                attempts++;

                if (guess == randomNumber) {
                    System.out.println("Congratulations! You've guessed the correct number.");
                    score += maxAttempts - attempts + 1; 
                    guessedCorrectly = true;
                } else if (guess < randomNumber) {
                    System.out.println("Too low. Try again.");
                } else {
                    System.out.println("Too high. Try again.");
                }
            }

            if (!guessedCorrectly) {
                System.out.println("\nSorry, you've run out of attempts.");
                System.out.println("The correct number was: " + randomNumber);
            }

            System.out.println("\nYour current score: " + score);

           
            System.out.print("\nDo you want to play again? (yes/no): ");
            String playAgainInput = scanner.nextLine().toLowerCase();

            if (!playAgainInput.equals("yes")) {
                playAgain = false;
            }
        }

        System.out.println("\nThank you for playing! Final score: " + score);

        
    }
}

OUTPUT:
Welcome to the Number Guessing Game!

I've picked a number between 1 and 100.
You have 5 attempts to guess it.

Enter your guess: 67
Too low. Try again.

Enter your guess: 78
Too low. Try again.

Enter your guess: 90
Congratulations! You've guessed the correct number.

Your current score: 3

Do you want to play again? (yes/no): yes

I've picked a number between 1 and 100.
You have 5 attempts to guess it.

Enter your guess: 5
Too low. Try again.

Enter your guess: 67
Too low. Try again.

Enter your guess: 78
Too high. Try again.

Enter your guess: 89
Too high. Try again.

Enter your guess: 90
Too high. Try again.

Sorry, you've run out of attempts.
The correct number was: 68

Your current score: 3

Do you want to play again? (yes/no): yes

I've picked a number between 1 and 100.
You have 5 attempts to guess it.

Enter your guess: 67
Too high. Try again.

Enter your guess: 88
Too high. Try again.

Enter your guess: 99
Too high. Try again.

Enter your guess: 34
Too high. Try again.

Enter your guess: 45
Too high. Try again.

Sorry, you've run out of attempts.
The correct number was: 6

Your current score: 3

Do you want to play again? (yes/no): NO

Thank you for playing! Final score: 3.

TASK 2:STUDENT GRADE CALCULATOR

Input: Take marks obtained (out of 100) in each subject.
Calculate Total Marks: Sum up the marks obtained in all subjects.
Calculate Average Percentage: Divide the total marks by the total number of subjects to get the
average percentage.
Grade Calculation: Assign grades based on the average percentage achieved.
Display Results: Show the total marks, average percentage, and the corresponding grade to the user 

PROGRAM:
import java.util.Scanner;
public class Markt
{
public static void main(String[] args) 
{
      Scanner s = new Scanner(System.in);
      System.out.print("Enter the number of subjects: ");
      int nSub = s.nextInt();
      int marks[] = new int[nSub];

       
        for (int i = 0; i < nSub; i++) {
        System.out.printf("Enter marks obtained in subject %d (out of 100): ", i + 1);
        marks[i] = s.nextInt();
        }

       
        int totalMarks = 0;
        for (int mark : marks) {
            totalMarks =totalMarks + mark;
        }

       double average= (double) totalMarks / nSub;

        char grade;
        if (average >= 90) {
            grade = 'A';
        } else if (average < 90 && average>=80) {
            grade = 'B';
        } else if (average < 80 && average>=70) {
            grade = 'C';
        } else if (average < 70 && average>=60) {
            grade = 'D';
        } else {
            grade = 'F'; 
        }

        
        System.out.println("Results:");
        System.out.println("Total Marks: " + totalMarks);
        System.out.printf("Average Percentage: %.2f%%\n", average);
        System.out.println("Grade: " + grade);

      
    }
}

OUTPUT:
Enter the number of subjects: 5
Enter marks obtained in subject 1 (out of 100): 98
Enter marks obtained in subject 2 (out of 100): 99
Enter marks obtained in subject 3 (out of 100): 89
Enter marks obtained in subject 4 (out of 100): 97
Enter marks obtained in subject 5 (out of 100): 78
Results:
Total Marks: 461
Average Percentage: 92.20%
Grade: A


TASK 3:ATM INTERFACE
1.Create a class to represent the ATM machine.

2. Design the user interface for the ATM, including options such as withdrawing, depositing, and
checking the balance.

3. Implement methods for each option, such as withdraw(amount), deposit(amount), and
checkBalance().

4. Create a class to represent the user's bank account, which stores the account balance.

5. Connect the ATM class with the user's bank account class to access and modify the account
balance.

6. Validate user input to ensure it is within acceptable limits (e.g., sufficient balance for withdrawals).

7. Display appropriate messages to the user based on their chosen options and the success or failure
of their transactions.


PROGRAM:
BankAccount.java:

public class BankAccount {
    private double balance;

    public BankAccount(double initialBalance) {
        this.balance = initialBalance;
    }

    public double getBalance() {
        return balance;
    }

    public void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            System.out.println("Deposited: $" + amount);
            System.out.println("Current Balance: $" + balance);
        } else {
            System.out.println("Invalid amount. Deposit amount must be positive.");
        }
    }

    public void withdraw(double amount) {
        if (amount > 0) {
            if (balance >= amount) {
                balance -= amount;
                System.out.println("Withdrawn: $" + amount);
                System.out.println("Current Balance: $" + balance);
            } else {
                System.out.println("Insufficient funds. Withdrawal amount exceeds balance.");
            }
        } else {
            System.out.println("Invalid amount. Withdrawal amount must be positive.");
        }
    }
}

ATM.java
import java.util.Scanner;

public class ATM {
    private BankAccount bankAccount;
    private Scanner scanner;

    public ATM(BankAccount bankAccount) {
        this.bankAccount = bankAccount;
        this.scanner = new Scanner(System.in);
    }

    public void run() {
        System.out.println("Welcome to the ATM");
        while (true) {
            System.out.println("\nPlease select an option:");
            System.out.println("1. Deposit");
            System.out.println("2. Withdraw");
            System.out.println("3. Check Balance");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    System.out.print("Enter amount to deposit: $");
                    double depositAmount = scanner.nextDouble();
                    bankAccount.deposit(depositAmount);
                    break;
                case 2:
                    System.out.print("Enter amount to withdraw: $");
                    double withdrawAmount = scanner.nextDouble();
                    bankAccount.withdraw(withdrawAmount);
                    break;
                case 3:
                    System.out.println("Current Balance: $" + bankAccount.getBalance());
                    break;
                case 4:
                    System.out.println("Thank you for using the ATM. Goodbye!");
                    scanner.close();
                    return;
                default:
                    System.out.println("Invalid choice. Please enter a number from 1 to 4.");
            }
        }
    }

    public static void main(String[] args) {
        BankAccount account = new BankAccount(1000); // Initial balance of $1000
        ATM atm = new ATM(account);
        atm.run();
    }
}

OUTPUT:
D:\uma>javac BankAccount.java ATM.java

D:\uma>java ATM
Welcome to the ATM

Please select an option:
1. Deposit
2. Withdraw
3. Check Balance
4. Exit
Enter your choice: 1
Enter amount to deposit: $5600
Deposited: $5600.0
Current Balance: $6600.0

Please select an option:
1. Deposit
2. Withdraw
3. Check Balance
4. Exit
Enter your choice: 2
Enter amount to withdraw: $600
Withdrawn: $600.0
Current Balance: $6000.0

Please select an option:
1. Deposit
2. Withdraw
3. Check Balance
4. Exit
Enter your choice: 3
Current Balance: $6000.0

Please select an option:
1. Deposit
2. Withdraw
3. Check Balance
4. Exit
Enter your choice: 4
Thank you for using the ATM. Goodbye!




